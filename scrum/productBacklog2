
# Add the following bugs and user stories to the 
# productBacklog.txt.
# (If you have already completed some of these in Part 1, 
# mark the OWNER as COMPLETED IN SPRINT 1 in the productBacklog.txt.
# SPRINT 2 MUST INCLUDE ALL OF THE FOLLOWING USER STORIES AND BUGS!!
# You should add and implement any additional user stories that 
# make your program great. Part of your mark will be competitive, 
# with more, great user stories and better UI recognized by marks.

--------------------------------------------------------------------------
TYPE     : BUG 2.1
NAME     : Architecture for drawing shapes can be improved
OWNER    : 
PRIORITY :
ESTIMATE : 
ISSUE    : The architecture can be improved if we implement the Command Design 
Pattern to draw shapes as follows:

The PaintModel should use the command design pattern. 
That is, each shape knows how to draw itself, so there is a single list of 
DrawingCommands maintained by the PaintModel and used by the PaintPanel.
paintComponent simply asks the PaintModel to ask command to execute(g2d).
The simplest way to make this happen is to make each shape implement the 
DrawingCommand interface which requires execute(g2d) to be implemented.
Well sort of.

--------------------------------------------------------------------------
--------------------------------------------------------------------------
TYPE     : BUG 2.2
NAME     : Architecture for handling shape modifiers can be improved 
OWNER    : 
PRIORITY :
ESTIMATE : 
ISSUE    : The architecture can be improved if we implement the Command Design 
Pattern to handle changes to the graphics contex such as changing drawing 
color, stroke width etc. You can accomplished this by wrapping the changes
to the graphics context in a DrawingCommand. This way these changes can be
added to the Bug 2.1 DrawingCommand list. That is, these new types of 
DrawingCommands appear on PaintPanel's list right along side 
the Shape type DrawingCommands.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
TYPE     : BUG 2.3
NAME     : Architecture behind choosing drawing mode is poor
OWNER    : 
PRIORITY :
ESTIMATE : 
ISSUE    : A better architecture behind selecting a drawing mode can be created 
by implementing the Factory Design Pattern as follows:

The factory design pattern should be used by the paint buttons. 
The factory is responsible for creating different ShapeManipulatorStrategy 
instances (see BUG 2.4). That is, when a button is pressed, the appropriate 
ShapeManipulatorStrategy is created and installed in the PaintPanel. 
Note that you can associate text with a button, even if you 
display an ImageIcon. The string attached to the button causes the right choice 
of object creation.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
TYPE     : BUG 2.4
NAME     : Architecture behind creating shape instances is poor
OWNER    : 
PRIORITY :
ESTIMATE : 
ISSUE    : A better architecture for creating shape instances so that it is 
more flexible, and easier to work with can be created using the Strategy Design 
pattern as follows:

Create class/abstract class/interface  ShapeManipulatorStrategy as well 
as subclasses/implementators for each type of Shape. Call these the
concrete ShapeNamipulatorStrategies

The concrete ShapeManipulatorStrategies are responsible for 

1. Creating instances of Shape and putting them on top of 
   the PaintModel command stack.

2. Understanding how mouse events modify the shape at the top of the 
   PaintModel command stack.

3. Calling the PaintPanel repaint at appropriate times.

This strategy can be put in place either by having PaintPanel's mouse 
events forwarded through PaintPanel into the current strategy, or by 
simply switching the PaintPanel's listeners as appropriate.

--------------------------------------------------------------------------
--------------------------------------------------------------------------
TYPE     : BUG 2.5
NAME     : Move non src files from src directory
OWNER    : 
PRIORITY :
ESTIMATE : 
ISSUE    : ANoteOnGit.txt members.txt scrum and other non-src files/folders
should appear in repo_[GROUP]/Assignment2, not in 
repo_[GROUP]/Assignment2/src causing copies to be sent to
repo_[GROUP]/Assignment2/bin/ and subsequent issues
with git pulling and merging.
RESOLVE  : Move above files and directories, add to index, commit
and push.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
TYPE     : BUG 2.6
NAME     : Git repo has incorrect .gitignore
OWNER    : 
PRIORITY :
ESTIMATE : 
ISSUE    : Modifications to src files leads to changes to .class files
in repo_[GROUP]/Assignment2/bin/. These changes lead to, if commited,
potential conflicts. To fix this, on the master branch, add a .gitignore to 
repo_[GROUP]/Assignment2/ or repo_[GROUP]/. The contents of .gitignore
could be, for example,

/bin/

You will need to add the .gitignore to index, commit and push it.
Unfortunately, this is not the end of the issue though, once git starts
tracking a file, it continues tracking it. To fix this, delete the .class
files (and any other files of interest) from the bin directory. Add this
change to index, commit and push. 
--------------------------------------------------------------------------
--------------------------------------------------------------------------
TYPE     : BUG 2.7
NAME     : Separate Thickness and Fill from ShapeChooserPanel
OWNER    : Member 1
PRIORITY : Medium
ESTIMATE : Finish on Wednesday
ISSUE    : Everything is clustered and messy in shapechooserpanel.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
TYPE     : USER STORY 13
NAME     : Keyboard Shortcuts
OWNER    : Member 1
PRIORITY : Medium
ESTIMATE : Finish by Wednesday
AS A     : user
I WANT   : To use keyboard shortcuts for undo, redo ... 
SO THAT  : I don't have to keep pulling up the menu to do one thing.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
TYPE     : USER STORY 14
NAME     : Clear All function.
OWNER    : Member 3
PRIORITY : Medium
ESTIMATE : Finish by Wednesday 
AS A     : user
I WANT   : To go through the menu and click "Clear All"
SO THAT  : I can clear the paint surface with 1 click. 
--------------------------------------------------------------------------
--------------------------------------------------------------------------
TYPE     : USER STORY 15
NAME     : Copy/Paste/Cut functions.
OWNER    : Member 3
PRIORITY : Medium
ESTIMATE : Finish by Wednesday 
AS A     : user
I WANT   : To be able to select Copy or cut, and outline what I would like to Copy/Cut.
SO THAT  : I can Paste what was selected where ever I wish.  
--------------------------------------------------------------------------
--------------------------------------------------------------------------
TYPE     : USER STORY 16
NAME     : Import Image function.
OWNER    : Member 3
PRIORITY : Medium 
ESTIMATE : Finish by Wednesday 
AS A     : user
I WANT   : Select an Image that I found and import it.
SO THAT  : I can place it anywhere on my canvas. 
--------------------------------------------------------------------------
--------------------------------------------------------------------------

# COMPLETED USER STORIES/BUGS SHOULD BE KEPT TRACK OF 
# IN THE ORIGINAL PRODUCTBACKLOG.TXT FILE
